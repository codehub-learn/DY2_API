// <auto-generated />
using System;
using DY2_API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DY2_API.Migrations
{
    [DbContext(typeof(LibContext))]
    [Migration("20211124175219_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DY2_API.Domain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            FirstName = "Umberto",
                            LastName = "Eco"
                        },
                        new
                        {
                            Id = -2,
                            FirstName = "Haruki",
                            LastName = "Murakami"
                        });
                });

            modelBuilder.Entity("DY2_API.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RentedToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RentedToId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AuthorId = -1,
                            Name = "The Name of the Rose",
                            Publisher = "Fixed House",
                            RentedToId = -1
                        },
                        new
                        {
                            Id = -2,
                            AuthorId = -1,
                            Name = "The Limits of Interpretation",
                            Publisher = "Fixed House"
                        },
                        new
                        {
                            Id = -3,
                            AuthorId = -2,
                            Name = "Kafka on the Shore",
                            Publisher = "Arctic Editions"
                        });
                });

            modelBuilder.Entity("DY2_API.Domain.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Email = "jsmith@example.com",
                            FirstName = "John",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("DY2_API.Domain.Book", b =>
                {
                    b.HasOne("DY2_API.Domain.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DY2_API.Domain.Member", "RentedTo")
                        .WithMany("RentedBooks")
                        .HasForeignKey("RentedToId");

                    b.Navigation("Author");

                    b.Navigation("RentedTo");
                });

            modelBuilder.Entity("DY2_API.Domain.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DY2_API.Domain.Member", b =>
                {
                    b.Navigation("RentedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
